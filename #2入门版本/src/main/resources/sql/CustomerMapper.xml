<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.maven.bean.Customer">
	<!-- 只需要匹配名字不一样的字段 -->
	<resultMap type="Customer" id="selectCustomerResultMap">
		<result column="_index" property="index" jdbcType="INTEGER"/>
	</resultMap>
	
	<!-- 当数据表的列名和bean中的字段名全一致时,只要指定resultType为相应的bean就行 -->
	<!-- 当数据表的列名和bean中的字段名不全一致时,需要定义指定resultMap并把reresultMap属性的值设为resultMap的id -->
	<select id="selectCustomer" resultMap="selectCustomerResultMap" parameterType="java.lang.String">
		SELECT * FROM Customer
		<!-- where 元素只在至少有一个子元素的条件返回 SQL 子句的情况下才去插入“WHERE”子句。 -->
		<!-- 并且当开头为“AND”或“OR”，where 元素也会将它们去除。  -->
		<!-- where可以用trim代替 -->
		<where>
			<!-- 在if标签对参数进行判断,可以使用_parameter,但仅限单个参数的情况 -->
			<if test="_parameter != null">
				id=#{id}
			</if>
		</where>
	</select>
	
	<!-- 利用map传入参数 -->
	<select id="selectCustomerByAgeAndActive" resultMap="selectCustomerResultMap" parameterType="java.util.Map">
		SELECT * FROM Customer
		<where>
			<if test="age != null">
				<!-- 因为<是特殊字符，所以用 <![CDATA[....]]> 框起来，让解析器忽略-->
				age <![CDATA[<]]> #{age}
			</if>
			<if test="active != null">
				AND active = #{active}
			</if>
		</where>
	</select>
	
	<update id="updateCustomer" parameterType="Customer">
		UPDATE Customer
		<!-- set标签会动态前置 SET 关键字，同时也会删掉无关的逗号 -->
		<set>
			<if test="index != null">_index=#{index},</if>
			<if test="guid != null">guid=#{guid},</if> 
			<if test="active != null">active=#{active},</if> 
			<if test="balance != null">balance=#{balance},</if> 
			<if test="picture != null">picture=#{picture},</if> 
			<if test="age != null">age=#{age},</if> 
			<if test="eyecolor != null">eyecolor=#{eyecolor},</if> 
			<if test="lastName != null">lastName=#{lastName},</if> 
			<if test="firstName != null">firstName=#{firstName},</if> 
			<if test="company != null">company=#{company},</if> 
			<if test="email != null">email=#{email},</if> 
			<if test="phone != null">phone=#{phone},</if> 
			<if test="address != null">address=#{address},</if> 
			<if test="about != null">about=#{about},</if> 
			<if test="favoriteFruit != null">favoriteFruit=#{favoriteFruit},</if>
		</set>
		WHERE
			id = #{id}
	</update>
	
	<delete id="deleteCustomer" parameterType="java.lang.String">
		DELETE FROM customer
		<!-- 用trim代替where标签 ,Mybatis会移除prefixOverrides定义的内容(包括空格) -->
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			<if test="_parameter != null">
				id = #{0}
			</if>
		</trim>
	</delete>
	
	<!-- 创建SQL代码片段 -->
	<sql id="customer_field">
		id, _index,guid, active, balance, picture, age, eyecolor, lastName, firstName, company, email, phone, address, about, favoriteFruit
	</sql>
	
	<!-- parameterType是可选的,因为MyBatis可以通过 TypeHandler推断出 -->
	<insert id="insertCustomer" parameterType="Customer">
		INSERT INTO customer(
		<!-- 引用SQL片段 -->
		<include refid="customer_field"></include>
		)
		  values (
		  	#{id}, 
			#{index},
			#{guid}, 
			#{active}, 
			#{balance}, 
			#{picture}, 
			#{age}, 
			#{eyecolor}, 
			#{lastName}, 
			#{firstName}, 
			#{company}, 
			#{email}, 
			#{phone}, 
			#{address}, 
			#{about}, 
			#{favoriteFruit}
		)
	</insert>
	
</mapper>